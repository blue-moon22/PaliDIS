process.container = 'bluemoon222/palidis_dependencies:0.0.15'

params {
        manifest = ""
        output_prefix = ""
        batch_name = "batch"

        min_itr_length = 25
        max_itr_length = 50
        kmer_length = 15
        min_is_len = 500
        max_is_len = 3000
        cd_hit_G = 0
        cd_hit_aL = 0.0
        cd_hit_aS = 0.9
        cd_hit_c = 0.9

        partition = "brc"
        clusterOptions = null
}

profiles {

        standard {
                docker {
                        enabled = true
                }
                withName:convertToFasta {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:palmem {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:buildDB {
                        memory = '4000 MB'
                }
                withName:mapReads1 {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:mapReads2 {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:getCandidateITRs {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:clusterReads {
                        memory = '4000 MB'
                        cpus = 2
                }
                withName:getITRs {
                        memory = '4000 MB'
                }
        }

        farm {
                docker {
                        enabled = false
                }

                singularity {
                        enabled = true
                        autoMounts = true
                        cacheDir = "$PWD"
                }

                process {
                        cpus = 1
                        memory = "8GB"
                        errorStrategy = {task.attempt <= 0 ? 'retry' : 'ignore'}
                        maxRetries = 0
                        withName:convertToFasta {
                                memory = '8000 MB'
                                cpus = 4
                                queue = 'normal'
                                }
                        withName:palmem {
                                memory = {128000.MB * task.attempt}
                                cpus = 64
                                queue = 'long'
                                }
                        withName:buildDB {
                                memory = '8000 MB'
                                queue = 'normal'
                                }
                        withName:mapReads1 {
                                memory = '32000 MB'
                                cpus = 16
                                queue = 'normal'
                                }
                        withName:mapReads2 {
                                memory = '32000 MB'
                                cpus = 16
                                queue = 'normal'
                                }
                        withName:getCandidateITRs {
                                memory = '32000 MB'
                                queue = 'long'
                                }
                        withName:clusterReads {
                                memory = {32000.MB * task.attempt}
                                cpus = 4
                                queue = 'normal'
                                }
                        withName:getITRs {
                                memory = {64000.MB * task.attempt}
                                cpus = {8 * task.attempt}
                                queue = 'long'
                                }
                }
                executor {
                        name = "lsf"
                        perJobMemLimit = true
                        jobName = { "palidis - $task.name - $task.hash" }
                        pollInterval = "5 sec"
                }
        }
        rosalind {

                docker {
                      enabled = false
                }

                singularity {
                      enabled = true
                      autoMounts = true
                      cacheDir = "$PWD"
                }

                process {
                        executor = 'slurm'
                        //queue = 'brc'
                        clusterOptions = { "--partition=$params.partition ${params.clusterOptions ?: ''}" }
                        //errorStrategy = {task.attempt <= 100 ? 'retry' : 'ignore'}
                        errorStrategy = { sleep(task.attempt * 200); return 'retry' }
                        maxRetries = 0
                        withName:convertToFasta {
                                memory = '4000 MB'
                                cpus = 4
                        }
                        withName:palmem {
                                memory = {64000.MB * task.attempt}
                                cpus = 16
                                clusterOptions = { "--time=2-00:00:00 --partition=$params.partition ${params.clusterOptions ?: ''}" }
                        }
                        withName:buildDB {
                                memory = '4000 MB'
                        }
                        withName:mapReads1 {
                                memory = '32000 MB'
                                cpus = 8
                        }
                        withName:mapReads2 {
                                memory = '32000 MB'
                                cpus = 8
                        }
                        withName:getCandidateITRs {
                                memory = '32000 MB'
                                clusterOptions = { "--time=2-00:00:00 --partition=$params.partition ${params.clusterOptions ?: ''}" }
                        }
                        withName:clusterReads {
                                memory = {32000.MB * task.attempt}
                                cpus = 4
                        }
                        withName:getITRs {
                                memory = {16000.MB * task.attempt}
                                cpus = 8
                        }
                }
                executor {
                        submitRateLimit = '1 sec'
                }
        }
}
